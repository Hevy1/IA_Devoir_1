Les actions des agents ont simplement pu être transférées sur des threads. En effet, il suffisait juste de donner l'action Agent->Update() au thread.
Cependant, sans changements supplémentaires, le console devenait illisible. En effet, alors qu'un agent était en train d'écrire en console depuis son thread, un autre thread pouvait alors commencer à prendre la main et écrire en même temps, donnant lieu donc à des coupures de messages par d'auters messages. De plus, comme les couleurs d'écriture en console étaient choisies bien avant l'écriture en console (lors du premier appel à Update()), les couleur d'écritures n'étaient plus les bonnes.
Ainsi, il fallait impérativement bloquer l'écriture en console à un seul agent à la fois. Cela a alors été effectué depuis un mutex. Tout d'abord, afin de facilement mettre en place le mutex, nous avons modifié la manière dont les agents écrivent en console : les classes des fichiers AgentOwnedStates font désormais appel aux fonctions Print() de la classe de l'agent lorsqu'il faut écrire quelque chsoe en console. De cette manière, il a alors été possible d'uniformiser la manière dont les écritures en console sont effectuées.
Les fonctions Print() font alors 4 actions principales : tout d'abord vérouiller le mutex, ensuite établir la couleur d'écriture en console, écrire ce qu'on a a écrire, et enfin déverrouiller le mutex. Cela permet alors de ne plus avoir de conflit lors de l'écriture de messages, et également d'avoir les bonnes couleurs d'écriture pour les agents.